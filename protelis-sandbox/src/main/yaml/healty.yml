incarnation: protelis

variables:
  n: &n
    formula: 500
    #type: GeometricVariable
    #parameters: [400, 100, 1000, 5]
  seed: &seed
    min: 0
    max: 1
    step: 1
    default: 0
  gridWidthInM: &gridWidthInM
    formula: 10
  gridHeightInM: &gridHeightInM
    formula: 5
  neighborgInRange: &neighborgInRange
    formula: 10
  commRange: &commRange
    # with homogenous density: deviceNumber / mapArea = neighboringDevices / circleArea
    formula: Math.sqrt($gridHeightInM * $gridWidthInM * $neighborgInRange / ($n * Math.PI))

network-model:
  type: EuclideanDistance
  parameters: [*commRange]

#environment:
#  type: OSMEnvironment
#  parameters: [src/main/resources/cesena.pbf]

#positions:
#  type: LatLongPosition

pools:
  - pool: &distanceTo
    - time-distribution: 1
      program: distanceTo
    - time-distribution: null
      program: send

displacements:
  - in:
      type: Rectangle
      parameters: [*n, 0, 0, *gridWidthInM, *gridHeightInM]
    contents:
      - in:
          type: Circle
          parameters: [2.5, 2.5, 1]
        molecule: source
        concentration: true
    programs:
      - *distanceTo

export:
  - time
  - number-of-nodes
  - molecule: distance
#    aggregators: [mean]
